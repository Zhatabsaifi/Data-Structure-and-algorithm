Given an array arr[] denoting heights of N towers and a positive integer K, modify the heights of each tower either by increasing or decreasing them by K only once. 
Find out the minimum difference of the heights of shortest and longest modified towers.


Example 1:

Input:
K = 2, N = 4
Arr[] = {1, 5, 8, 10}
Output: 5
Explanation: The array can be modified as 
{3, 3, 6, 8}. The difference between 
the largest and the smallest is 8-3 = 5.


time -  O(nlogn) 
space - O(1)

class Solution{   
public:
    int getMinDiff(int a[], int n, int k) {
        // code here
        sort(a , a+n);
        int ans = a[n-1] - a[0];
        
        int small = a[0] + k;
        int big = a[n-1] - k;
        
        if(small > big){
            swap(small,big);
        }
        
        for(int i=1;i<n-1;i++){
            int sub = a[i] - k;
            int add = a[i] + k;
            
            if(sub >= small || add <= big){
                continue; 
            }
            
            if(big - sub <= add - small){
                small = sub;
            }else{
                big = add;
            }
        }
        ans = min(ans, big - small);
        return ans;
    }
};

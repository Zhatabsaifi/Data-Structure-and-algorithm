
parent stroe int left child and move in left side



Node* KthLargestUsingMorrisTraversal(Node* root, int k) 
{ 
    Node* curr = root; 
    Node* Klargest = NULL; 
  
    // count variable to keep count of visited Nodes 
    int count = 0; 
  
    while (curr != NULL) { 
        
        if (curr->right == NULL) { 
            if (++count == k) 
                Klargest = curr; 
  
            curr = curr->left; 
        } 
  
        else { 
            Node* succ = curr->right; 
  
            while (succ->left != NULL && succ->left != curr) 
                succ = succ->left; 
  
            if (succ->left == NULL) { 
                succ->left = curr; 
  
                curr = curr->right; 
            } 
            else { 
  
                succ->left = NULL; 
  
                if (++count == k) 
                    Klargest = curr; 
  
                curr = curr->left; 
            } 
        } 
    } 
  
    return Klargest; 
} 
